<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:p="http://www.springframework.org/schema/p"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:mvc="http://www.springframework.org/schema/mvc"
  xsi:schemaLocation="
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
    
    <!-- 扫描controller（controller层注入） -->
   <context:component-scan base-package="**.controller"/>
   
    <!-- 初始化配置信息 -->
   <!-- <bean id="initMsgConfig" class="com.zhuzi.util.MsgConfigUtil" init-method="initMsgConfig"></bean> -->
   <!-- 初始化定时任务 -->
  	<!-- <bean id="initQuartzJob" class="com.neusoft.sdd.util.commonUtil.QuartzManager" init-method="initQuartzJob"></bean> -->
  	
  	<mvc:interceptors>    
        <mvc:interceptor>    
            <mvc:mapping path="/*/*" />    
            <bean class="base.interceptor.SessionTimeoutInterceptor" >    
                <property name="allowUrls">      
                    <list>      
                      <value>index.do</value> 
                      <value>toLoginPage.do</value>
                      <value>toRegisterPage.do</value>
                      <value>register.do</value>
                      <value>Login.do</value>
                      <value>toDocLoginPage.do</value>
                      <value>toDocRegisterPage.do</value>
                      <value>docLogin.do</value>
                      <value>docRegister.do</value>
                      <value>toAdminLoginPage.do</value>
                      <value>adminLogin.do</value>
                    </list>      
                </property>      
            </bean>    
        </mvc:interceptor>    
    </mvc:interceptors> 
    <!-- 分页拦截器 -->
     <!-- <mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<bean class="base.interceptor.PageInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>  --> 
    <!-- exception handler 统一异常处理-->    
    <!-- <bean id="handlerExceptionResolver"    
     class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver" >    
        <property name="exceptionMappings">    
            <props>    
                <prop key="*.CustomeException">redirect:/BaseController/index.do</prop>    
            </props>    
        </property>    
    </bean> -->  
  	
   <!-- 避免IE在ajax请求时，返回json出现下载 -->
   <bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">		
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	
	<!-- 处理json数据转换 -->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                 <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"/>
            </list>
        </property>
	</bean>
	
   <!-- 对模型视图添加前后缀 -->
   <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver" 
    p:prefix="/WEB-INF/views/" p:suffix=".jsp"/>
    
    
    <!-- 主要是解析@Controller @RequestMapping 等注解的 -->
	<mvc:annotation-driven/>
	
	 <!-- 多部分文件上传 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="104857600" />
		<property name="maxInMemorySize" value="4096" />
		<property name="defaultEncoding" value="UTF-8"></property>
	</bean>
	<!-- 启动对@AspectJ注解的支持 --> 
     <!-- proxy-target-class等于true是强制使用cglib代理，proxy-target-class默认是false，如果你的类实现了接口 就走JDK代理，如果没有，走cglib代理  -->
     <!-- 注：对于单利模式建议使用cglib代理，虽然JDK动态代理比cglib代理速度快，但性能不如cglib -->

     <!--如果不写proxy-target-class="true"这句话也没问题-->
    <!--  <aop:aspectj-autoproxy proxy-target-class="true"/> -->

     <!--切面-->
     <!-- <bean id="systemLogAspect" class="com.neusoft.sdd.base.systemLog.SystemLogAspect"></bean> -->
</beans>